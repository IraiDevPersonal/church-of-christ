---
import { LINKS } from "@libs/const";
import { Icon } from "astro-icon/components";
import Brand from "./Brand.astro";

const currentPath = Astro.url.pathname;
---

<button
  id="openMenuBtn"
  data-open="true"
  class="p-1.5 hover:bg-neutral-200 transition-colors rounded-md cursor-pointer md:hidden"
>
  <Icon name="menu-icon" size={24} />
</button>

<div
  id="navMenu"
  class="menu-wrapper bg-neutral-50 fixed inset-0 z-40 p-4 space-y-4 flex-col"
>
  <div class="flex justify-between items-center">
    <Brand />

    <button
      id="closeMenuBtn"
      class="p-1.5 hover:bg-neutral-200 transition-colors rounded-md cursor-pointer md:hidden"
    >
      <Icon name="close-icon" size={24} />
    </button>
  </div>

  <ul class="gap-y-4 grow-[1] flex flex-col justify-center items-center">
    {
      LINKS.map(({ href, label }) => (
        <li>
          <a
            href={href}
            class="relative text-3xl inline-block p-2 pb-3 not-hover:opacity-40 font-semibold transition-[opacity] leading-0"
          >
            {label}
            {currentPath === href && (
              <Icon
                size={40}
                name="right-arrow-icon"
                class="absolute top-1/2 -left-8 -translate-y-1/2"
              />
            )}
          </a>
        </li>
      ))
    }
  </ul>
</div>

<script>
  import { $ } from "@libs/utils";

  const openMenuBtn = $<HTMLButtonElement>("#openMenuBtn");
  const closeMenuBtn = $<HTMLButtonElement>("#closeMenuBtn");
  const menu = $<HTMLDivElement>("#navMenu");

  function handleToggle() {
    menu?.classList.toggle("open");
  }
  function handleResize() {
    const isLargeScreen = window.matchMedia("(min-width: 48rem)").matches;

    if (isLargeScreen) {
      menu?.classList.remove("open");
    }
  }

  if (openMenuBtn && closeMenuBtn) {
    openMenuBtn.addEventListener("click", handleToggle);
    closeMenuBtn.addEventListener("click", handleToggle);
  }

  window.addEventListener("resize", handleResize);
</script>

<style>
  .menu-wrapper {
    display: none;
    opacity: 0;
    transition:
      opacity 0.5s ease,
      display 0.5s ease allow-discrete;

    &.open {
      opacity: 1;
      display: flex;
    }
  }

  @starting-style {
    .menu-wrapper.open {
      opacity: 0;
    }
  }
</style>
